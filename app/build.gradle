plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion androidCompileSdkVersion

    defaultConfig {
        applicationId "br.com.hitg.calculator"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 25
        versionName "5.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }
    }

    signingConfigs {
        release {
            storeFile file("$System.env.KEYSTORE" ?: "KeyStore.jks")
            storePassword "$System.env.KEYSTORE_PASSWORD"
            keyAlias "$System.env.KEY_ALIAS"
            keyPassword "$System.env.KEY_PASSWORD"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable = true
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
    }

    lintOptions {
        // Turns off checks for the issue IDs you specify.
        disable("TypographyFractions", "TypographyQuotes")
        // Turns on checks for the issue IDs you specify. These checks are in
        // addition to the default lint checks.
        enable("RtlHardcoded", "RtlCompat", "RtlEnabled")
        // To enable checks for only a subset of issue IDs and ignore all others,
        // list the issue IDs with the 'check' property instead. This property overrides
        // any issue IDs you enable or disable using the properties above.
        check("NewApi", "InlinedApi")
        // If set to true, turns off analysis progress reporting by lint.
        quiet = true
        // if set to true (default), stops the build if errors are found.
        abortOnError = false
        // if true, only report errors.
        ignoreWarnings = true
    }
}

dependencies {
    implementation project(path: ':domain')

    def dependencies = rootProject.ext.dependencies
    def testDependencies = rootProject.ext.testDependecies

    implementation dependencies.kotlinJdk7
    implementation dependencies.appCompact
    implementation dependencies.media
    implementation dependencies.legacyv4

    implementation dependencies.recyclerview
    implementation dependencies.constraintlayout
    implementation dependencies.lifecycle

    implementation dependencies.material

    implementation dependencies.firebaseCore
    implementation dependencies.firebaseCrashlytics
    implementation dependencies.firebaseAnalytics

    testImplementation testDependencies.junit
    testImplementation testDependencies.espresso
    testImplementation testDependencies.runner
}

apply plugin: "com.google.gms.google-services"